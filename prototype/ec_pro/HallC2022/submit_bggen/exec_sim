#!/usr/bin/perl
# Perl module to run
############################################################
# Set defaults
@files[0]="\*";
#================= Processing Arguments ======
while($_ = @ARGV[0],/^-/){
    shift;
    last if /^$/;
    substr($_,0,1) = "";
    if($_,/^r/){
# Get the run number to process
        substr($_,0,1)="";
        @runs = split('\,',$_);
    }
    elsif($_,/^h/){
# Get the input file name
                &print_usage();
                exit;
    }
}
#
# Lopp over runs
#
die"\n Run number is not specified, will terminate\! \n Use -h for usage \n\n" if !$runs[0];

foreach (@runs) {
        $rnum=$_;
# Creat jsub for this job
        $usrnam=`whoami`;
        chop($usrnam);
        $cdir=`pwd`;
        chop($cdir);
	$odir = $cdir =~ s/w\/halla-scshelf2102/volatile\/halla/r;        
	$outevio="out\.$rnum\.evio";
        $outroot="out\.$rnum\.root";
        $outlog="out\.$rnum\.log";
	$genroot="gen\.$rnum\.root";
#         $genlund="gen\.$rnum\.lund";
# 	$genlund="/work/halla/solid/evgen/evgen_bggen/SIDIS_3He_commit04ff277/pip/hallD_pion_p_3He_3k_$rnum\.lund";
# 	$genlund="/work/halla/solid/evgen/evgen_bggen/SIDIS_3He_commit04ff277/pip/hallD_pion_p_3He_3k_$rnum\[0-9].lund";
	#$genlund="/volatile/halla/solid/tianye/bggen_zvertex/bggen/HallC_beamtest_LH2/pi03/hallD_pion_0_LH_10k_$rnum\[0-9].lund";
	$genlund="/volatile/halla/solid/tianye/bggen_zvertex/bggen/HallC_beamtest_LD2_40uA/pi013/hallD_pion_0_LD_10k_$rnum\[0-9].lund";
        $S_script_name = "jsc$rnum";
        open(SCRIPT_FILE,">$S_script_name");
        printf SCRIPT_FILE "#!/bin/bash \n";
        printf SCRIPT_FILE "#SBATCH --job-name=sim$rnum \n";
        printf SCRIPT_FILE "#SBATCH --account=halla \n";
#         printf SCRIPT_FILE "#SBATCH --partition=priority \n";
        printf SCRIPT_FILE "#SBATCH --partition=production \n";
#         printf SCRIPT_FILE "#SBATCH --output=$odir/sim$rnum/%x-%j-%N.out \n";
#         printf SCRIPT_FILE "#SBATCH --error=$odir/sim$rnum/%x-%j-%N.err \n";        
#         printf SCRIPT_FILE "#SBATCH --output=$odir/sim$rnum-%j-%N.out \n";
#         printf SCRIPT_FILE "#SBATCH --error=$odir/sim$rnum-%j-%N.err \n";        
        printf SCRIPT_FILE "#SBATCH --output=/farm_out/$usrnam/sim$rnum-%j-%N.out \n";
        printf SCRIPT_FILE "#SBATCH --error=/farm_out/$usrnam/sim$rnum-%j-%N.err \n";        
        printf SCRIPT_FILE "#SBATCH --mail-user=$usrnam\@jlab.org \n";
#        printf SCRIPT_FILE "--constraint=general \n";
	printf SCRIPT_FILE "#SBATCH --time=24:00:00 \n";
        printf SCRIPT_FILE "#SBATCH --mem-per-cpu=1000 \n";
#         printf SCRIPT_FILE "#SBATCH --gres=disk:10000 \n";
#         printf SCRIPT_FILE "#SBATCH --chdir=$odir \n";
        printf SCRIPT_FILE "cd /scratch/slurm/\$SLURM_JOBID \n";
#         printf SCRIPT_FILE "mkdir sim$rnum; cd sim$rnum; \n";        
# 	printf SCRIPT_FILE "cp $genlund ./gen.lund \n";                        
	printf SCRIPT_FILE "cat $genlund > ./gen.lund \n";                        
#         printf SCRIPT_FILE "cp $cdir/input.dat $cdir/evgen.sh ./ \n";                        
        printf SCRIPT_FILE "cp $cdir/load_singularity.sh $cdir/do_it_all.sh $cdir/solid.gcard ./ \n";                
        printf SCRIPT_FILE "./load_singularity.sh; \n";
        printf SCRIPT_FILE "mv out.root $odir/$outroot; \n";
        printf SCRIPT_FILE "mv out.log $odir/$outlog; \n";        
#         printf SCRIPT_FILE "mv ../sim$rnum-* ./; \n";        
        close(SCRIPT_FILE);
        $sbj=`sbatch $S_script_name`;
        print "Job jsc$rnum is launching ..., $sbj \n";
}

#
################################################
sub print_usage{
#
        print <<ALL;
exec_gsim: Creates a script to run GSIM_BAT on the farm and
                  copy results to the desired locations.
                  Only required argument is a run number.
                  Rest of arguments have their defaults.

Usage: exec_do_it_all -r[RunNumber(s)]

ALL
                return;
#
}
